import unittest
from ..app.vulns_structure import VulnerabilityStructure
from ..app.main import create_json_from_object
import datetime


class MainTest(unittest.TestCase):
    """
    Unit tests for main application
    """

    @classmethod
    def setUpClass(cls):
        cls._vulnerability = VulnerabilityStructure("ABCD", "my app1", datetime.date(2019, 10, 11), "SQL Injection",
                                                    7, "AV:A/AC:I/PR",
                                                    "SQL_SQL Injection", "SQL", "Pentest")

    def test_create_json_from_object_method(self):
        output_dict = {
            "skip_autoclose": False,
            "assets": [
                {
                    "file": "my app1",
                    "external_id": "ABCD",
                    "tags": ["ABCD"],
                    "owner": None,
                    "priority": None,
                    "application": "ABCD_my app1",
                    "vulns": [
                        {
                            "scanner_identifier": "807d9b9f6e618c01af9f62f6d7f05c02",
                            "scanner_type": "Pentest",
                            "scanner_score": 7,
                            "created_at": "2019-10-11",
                            "last_seen_at": "2019-10-11",
                            "status": None
                        }
                    ]
                }
            ],
            "vuln_defs": [
                {
                    "scanner_identifier": "807d9b9f6e618c01af9f62f6d7f05c02",
                    "scanner_type": "Pentest",
                    "name": "my app1",
                    "description": "CVSS Vector: AV:A/AC:I/PR | Comment: SQL | Impact Desc: SQL_SQL Injection",
                    "solution": None
                }
            ]
        }
        self.assertEquals(output_dict, create_json_from_object(self._vulnerability))

    @classmethod
    def tearDownClass(cls):
        cls._vulnerability = None


if __name__ == '__main__':
    unittest.main()
